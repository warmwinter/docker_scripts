# Nacos
# https://nacos.io

# https://activemq.apache.org/components/artemis/download/
# https://activemq.apache.org/components/artemis/documentation/
# https://hub.docker.com/_/alpine
# https://github.com/alpinelinux/docker-alpine
# https://pkgs.alpinelinux.org/

FROM alpine:3.16

LABEL Description="ActiveMQ Artemis Docker" Vendor="Demo Studio" Version="1.0.0"

# set environment
ENV ALPINE_VERSION="3.16" \
    BASE_DIR="/home/artemis" \
    JAVA_HOME="/usr/lib/jvm/java-17-openjdk" \
    JAVA="/usr/lib/jvm/java-17-openjdk/bin/java" \
    CURL_CMD="curl --retry-all-errors --retry-delay 2 --retry 99 -L " \
    TIME_ZONE="Asia/Shanghai"

ARG LOCAL_MIRROR=""

# Broker info
ENV ARTEMIS_VERSION=2.28.0 \
    ARTEMIS_HOME="${BASE_DIR}/artemis" \
    BROKER_HOME="${BASE_DIR}/brokers" \
    BROKER_DIR="mainBroker" \
    BROKER_USER="admin" \
    BROKER_PWD="admin123"

WORKDIR $BASE_DIR

RUN set -xe \
#
# Change alpine mirror to demostic
    && mv /etc/apk/repositories /etc/apk/repositories.bak \
    && echo "https://mirrors.aliyun.com/alpine/v${ALPINE_VERSION}/main" > /etc/apk/repositories \
    && echo "https://mirrors.aliyun.com/alpine/v${ALPINE_VERSION}/community" >> /etc/apk/repositories \
#
# Modify resolve.conf, use AliDNS (www.alidns.com)
    && echo '# Generated by NetworkManager' > /etc/resolv.conf \
    && echo 'nameserver 223.5.5.5' >> /etc/resolv.conf \
    && echo 'nameserver 223.6.6.6' >> /etc/resolv.conf \
#
# Config the System, inclue timezone
    && apk add --no-cache --virtual .system-deps tzdata \
    && cp /usr/share/zoneinfo/$TIME_ZONE /etc/localtime \
    && echo $TIME_ZONE > /etc/timezone \
    && date \
# 
    && apk upgrade \
    && apk add --no-cache bash openjdk17 curl \
    && echo $LOCAL_MIRROR \
    && echo $MODE \
    && pwd  \
    # clean packages
    && apk del .system-deps; \
    \
    mkdir -p ${ARTEMIS_HOME}; \
    mkdir -p ${BROKER_HOME};

# Download artemis
RUN set -xe; \
    \
    if [ -z "$LOCAL_MIRROR" ]; then \
#        ${CURL_CMD} "https://www.apache.org/dyn/closer.cgi?filename=activemq/activemq-artemis/${ARTEMIS_VERSION}/apache-artemis-${ARTEMIS_VERSION}-bin.tar.gz&action=download" -o artemis.tar.gz; \
         ${CURL_CMD}} https://dlcdn.apache.org/activemq/activemq-artemis/${ARTEMIS_VERSION}/apache-artemis-${ARTEMIS_VERSION}-bin.tar.gz -o artemis.tar.gz; \
    else \
        ${CURL_CMD} "https://mirrors.inproc.top/apache-artemis-${ARTEMIS_VERSION}-bin.tar.gz" -o artemis.tar.gz; \
    fi; \
    \
    tar --strip-components=1 -C ${ARTEMIS_HOME} -zxf artemis.tar.gz; \
    rm -f artemis.tar.gz; \
    cd ${BROKER_HOME}; \
    ${ARTEMIS_HOME}/bin/artemis create --encoding UTF-8 --force --http-host 0.0.0.0 --password ${BROKER_PWD} --require-login --role admin --use-client-auth --user ${BROKER_USER} ${BROKER_DIR}; \
    sed -i "/<cors>/a\        <allow-origin>*:\/\/*<\/allow-origin>\n" ${BROKER_DIR}/etc/jolokia-access.xml; \
    cd ..; \
    ln -s "${BROKER_HOME}/${BROKER_DIR}/bin/artemis" /usr/local/bin/;

# Web Server
EXPOSE 8161

# JMX Exporter
EXPOSE 9404

# Port for CORE,MQTT,AMQP,HORNETQ,STOMP,OPENWIRE
EXPOSE 61616

# Port for HORNETQ,STOMP
EXPOSE 5445

# Port for AMQP
EXPOSE 5672

# Port for MQTT
EXPOSE 1883

#Port for STOMP
EXPOSE 61613

#ENTRYPOINT ["bin/docker-startup.sh"]
CMD ["artemis", "run"]
