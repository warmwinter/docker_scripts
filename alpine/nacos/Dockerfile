# Nacos
# https://nacos.io

# https://github.com/alibaba/nacos
# https://hub.docker.com/r/nacos/nacos-server
# https://hub.docker.com/_/alpine
# https://github.com/nacos-group/nacos-docker
# https://github.com/alpinelinux/docker-alpine
# https://pkgs.alpinelinux.org/

FROM alpine:3.19

LABEL Description="Nacos Docker" Vendor="Demo Studio" Version="1.0.0"

# apk add mysql-client mariadb-connector-c

# set environment
ENV ALPINE_VERSION="3.19" \
    MODE="cluster" \
    PREFER_HOST_MODE="ip"\
    BASE_DIR="/home/nacos" \
    CLASSPATH=".:/home/nacos/conf:$CLASSPATH" \
    CLUSTER_CONF="/home/nacos/conf/cluster.conf" \
    FUNCTION_MODE="all" \
    JAVA_HOME="/usr/lib/jvm/java-21-openjdk" \
    NACOS_USER="nacos" \
    JAVA="/usr/lib/jvm/java-21-openjdk/bin/java" \
    JVM_XMS="1g" \
    JVM_XMX="1g" \
    JVM_XMN="512m" \
    JVM_MS="128m" \
    JVM_MMS="320m" \
    NACOS_DEBUG="n" \
    TOMCAT_ACCESSLOG_ENABLED="false" \
    TIME_ZONE="Asia/Shanghai"

# Common property configuration
ENV SPRING_DATASOURCE_PLATFORM="mysql" \
    MYSQL_SERVICE_HOST="127.0.0.1" \
    MYSQL_SERVICE_PORT="3306" \
    MYSQL_SERVICE_DB_NAME="nacos" \
    MYSQL_SERVICE_USER="root" \
    MYSQL_SERVICE_PASSWORD=""

# telnet 
# apk add busybox-extras

ARG NACOS_VERSION=2.3.0
ARG HOT_FIX_FLAG=""
ARG LOCAL_MIRROR=""
ARG ROCKSDB_VERSION=8.10.0

WORKDIR $BASE_DIR

RUN set -xe \
#
# Change alpine mirror to demostic
    && mv /etc/apk/repositories /etc/apk/repositories.bak \
    && echo "https://mirrors.aliyun.com/alpine/v${ALPINE_VERSION}/main" > /etc/apk/repositories \
    && echo "https://mirrors.aliyun.com/alpine/v${ALPINE_VERSION}/community" >> /etc/apk/repositories \
#
# Modify resolve.conf, use AliDNS (www.alidns.com)
    # && echo '# Generated by NetworkManager' > /etc/resolv.conf \
    # && echo 'nameserver 223.5.5.5' >> /etc/resolv.conf \
    # && echo 'nameserver 223.6.6.6' >> /etc/resolv.conf \
#
# Config the System, inclue timezone
    && apk add --no-cache --virtual .system-deps tzdata gcc make g++ perl linux-headers binutils \
    && cp /usr/share/zoneinfo/$TIME_ZONE /etc/localtime \
    && echo $TIME_ZONE > /etc/timezone \
    && date \
# 
    && apk upgrade \
    && apk add --no-cache bash openjdk21 wget iputils netcat-openbsd vim libcurl \
    && echo $LOCAL_MIRROR \
    && echo $MODE \
    && pwd \
# telnet in busybox-extras package
#
# install rocksdb
# https://github.com/facebook/rocksdb/blob/main/INSTALL.md
# 
    && apk add --no-cache zlib-dev bzip2 bzip2-dev lz4-dev snappy-dev gflags-dev zstd-dev libc6-compat \
#    && ln -s /lib/libc.musl-x86_64.so.1 /lib/ld-linux-x86-64.so.2 \
# https://github.com/facebook/rocksdb/archive/refs/tags/v6.22.1.tar.gz
    && if [ -z "$LOCAL_MIRROR" ]; then \
        wget -t 0 https://github.com/facebook/rocksdb/archive/refs/tags/v${ROCKSDB_VERSION}.tar.gz -O rocksdb-${ROCKSDB_VERSION}.tar.gz; \
    else \
        wget -t 0 https://mirrors.inproc.top/rocksdb-${ROCKSDB_VERSION}.tar.gz; \
    fi \
    && tar zxf rocksdb-${ROCKSDB_VERSION}.tar.gz \
    && cd rocksdb-${ROCKSDB_VERSION} \
    && make shared_lib \
    && cp librocksdb.so.${ROCKSDB_VERSION} /usr/lib/librocksdb.so \
    && strip /usr/lib/librocksdb.so \
    && cd .. \
    && rm -rf rocksdb-* \
#
# clean packages
    && apk del .system-deps

RUN if [ -z "$LOCAL_MIRROR" ]; then \
        wget -t 0 https://github.com/alibaba/nacos/releases/download/${NACOS_VERSION}${HOT_FIX_FLAG}/nacos-server-${NACOS_VERSION}.tar.gz -P /home; \
    else \
        wget -t 0 https://mirrors.inproc.top/nacos-server-${NACOS_VERSION}.tar.gz -P /home; \
    fi
RUN tar -xzvf /home/nacos-server-${NACOS_VERSION}.tar.gz -C /home \
    && rm -rf /home/nacos-server-${NACOS_VERSION}.tar.gz /home/nacos/bin/* /home/nacos/conf/*.properties /home/nacos/conf/*.example /home/nacos/conf/nacos-mysql.sql

ADD bin/docker-startup.sh bin/docker-startup.sh
ADD conf/application.properties conf/application.properties

# set startup log dir
RUN mkdir -p logs \
	&& cd logs \
	&& touch start.out \
	&& ln -sf /dev/stdout start.out \
	&& ln -sf /dev/stderr start.out
RUN chmod +x bin/docker-startup.sh

EXPOSE 8848
ENTRYPOINT ["bin/docker-startup.sh"]
# CMD ["sh"]
