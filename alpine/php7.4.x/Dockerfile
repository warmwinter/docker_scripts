# PHP Version 7.4.x

# https://hub.docker.com/_/php?tab=tags&page=1&name=fpm-alpine

FROM php:7.4-fpm-alpine3.15

LABEL Description="PHP v7.4.x Docker" Vendor="Demo Studio" Version="1.0.0"

# Some Enviroment
ENV php_conf_d /usr/local/etc/php/conf.d/

ENV ALPINE_VERSION 3.15
ENV IGBINARY_VER 3.2.6
ENV REDIS_VER 5.3.4
ENV XDEBUG_VER 3.1.1
ENV SWOOLE_VER 4.8.2
ENV MCRYPT_VER 1.0.4
ENV MYSQL_VER master
# http extension v4.x only PHP 8;
# NEED raphf and propro extension, 
# and MUST BE last loaded
ENV RAPHF_VER 2.0.1
ENV PROPRO_VER 2.1.0
ENV HTTP_VER 4.2.1

RUN set -xe \
    && addgroup -g 48 -S apache \
    && adduser -u 48 -D -S -G apache apache \
# Add the user and group named apache, because the host is centos and mounted volume owner is apache(id 48)
#
# Change alpine mirror to demostic
    && mv /etc/apk/repositories /etc/apk/repositories.bak \
    && echo "https://mirrors.aliyun.com/alpine/v${ALPINE_VERSION}/main" > /etc/apk/repositories \
    && echo "https://mirrors.aliyun.com/alpine/v${ALPINE_VERSION}/community" >> /etc/apk/repositories \
#
# Modify resolve.conf, use AliDNS (www.alidns.com)
    && echo '# Generated by NetworkManager' > /etc/resolv.conf \
    && echo 'nameserver 223.5.5.5' >> /etc/resolv.conf \
    && echo 'nameserver 223.6.6.6' >> /etc/resolv.conf \
#
# Config the System, inclue timezone
    && apk update \
    && apk add --no-cache --virtual .system-deps tzdata \
    && cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \
    && echo 'Asia/Shanghai' > /etc/timezone \
    && date \
    && apk del .system-deps \
# 
# Modify php-fpm configure files, change user/group, change logs position
    && sed -i \
        -e "s/^user\s*=\s*www-data/user = apache/g" \
        -e "s/^group\s*=\s*www-data/group = apache/g" \
        /usr/local/etc/php-fpm.d/www.conf \
#
# modify logs setting
    && sed -i \
        -e "s:^error_log\s*=\s*/proc/self/fd/2:error_log = /var/log/php-fpm/php-fpm.log:g" \
        -e '$a\; new log settings' \
        -e '$a\slowlog = /var/log/php-fpm/www_slow.log' \
        -e '$a\request_slowlog_timeout = 2s' \
        -e '$a\php_admin_value[error_log] = /var/log/php-fpm/www_error.log' \
        -e '$a\php_admin_flag[log_errors] = on' \
        /usr/local/etc/php-fpm.d/docker.conf \
#
# Add php.ini config
    && echo 'expose_php = Off' > ${php_conf_d}docker-vars.ini \
    && echo 'error_log = /var/log/php-fpm/php_errors.log' >> ${php_conf_d}docker-vars.ini \
    && echo 'variables_order = "GPCS"' >> ${php_conf_d}docker-vars.ini \
    && echo 'request_order = "GP"' >> ${php_conf_d}docker-vars.ini \
    && echo 'upload_max_filesize = 8M' >> ${php_conf_d}docker-vars.ini \
    && echo 'date.timezone = ASIA/SHANGHAI' >> ${php_conf_d}docker-vars.ini \
#
# add apk .phpext-deps, it's persistent
    && apk add --no-cache --virtual .php-extensions-deps \
        icu-dev  \
# for intl extension
        gd-dev libvpx-dev libjpeg-turbo-dev libpng-dev zlib-dev libxpm-dev freetype-dev \
# for gd extension
        nghttp2-dev hiredis-dev openssl-dev \
# for swoole extension
#        libmcrypt-dev \
# for mcrypt extension
         libmcrypt-dev \
#
# for php extension
         brotli-dev curl-dev libevent-dev libidn2-dev libidn-dev icu-dev libidn-dev libidn2-dev \
#
# add apk build deps
    && apk add --no-cache --virtual .build-deps \
        $PHPIZE_DEPS \
#        wget \
#
# Create source dolder
    && mkdir -p /usr/src \
# Install exif gd intl mysqli pdo_mysql sockets
    && docker-php-ext-configure gd --enable-gd --with-external-gd --with-webp \
        --with-jpeg --with-xpm --with-freetype --enable-gd-jis-conv --with-pic \
    && docker-php-ext-install bcmath exif gd intl mysqli pdo_mysql sockets \
# 
# Fetch pecl
    && curl -fSL http://pecl.php.net/get/igbinary-$IGBINARY_VER.tgz -o igbinary.tgz \
    && curl -fSL http://pecl.php.net/get/redis-$REDIS_VER.tgz -o redis.tgz \
    && curl -fSL http://pecl.php.net/get/xdebug-$XDEBUG_VER.tgz -o xdebug.tgz \
    && curl -fSL http://pecl.php.net/get/swoole-$SWOOLE_VER.tgz -o swoole.tgz \
    && curl -fSL http://pecl.php.net/get/mcrypt-$MCRYPT_VER.tgz -o mcrypt.tgz \
    && curl -fSL https://github.com/php/pecl-database-mysql/archive/$MYSQL_VER.tar.gz -o mysql.tar.gz \
    && curl -fSL https://pecl.php.net/get/raphf-$RAPHF_VER.tgz -o raphf.tgz \
    && curl -fSL https://pecl.php.net/get/propro-$PROPRO_VER.tgz -o propro.tgz \
    && curl -fSL https://pecl.php.net/get/pecl_http-$HTTP_VER.tgz -o pecl_http.tgz \
# 
# Decompress
    && tar -zxvC /usr/src -f igbinary.tgz \
    && tar -zxvC /usr/src -f redis.tgz \
    && tar -zxvC /usr/src -f xdebug.tgz \
    && tar -zxvC /usr/src -f swoole.tgz \
    && tar -zxvC /usr/src -f mcrypt.tgz \
    && tar -zxvC /usr/src -f mysql.tar.gz \
    && tar -zxvC /usr/src -f raphf.tgz \
    && tar -zxvC /usr/src -f propro.tgz \
    && tar -zxvC /usr/src -f pecl_http.tgz \
#
# clean pecl compressed packages
    && rm -f igbinary.tgz redis.tgz xdebug.tgz \
    swoole.tgz mcrypt.tgz mysql.tar.gz raphf.tgz propro.tgz pecl_http.tgz \
#
# Install pecl igbinary
    && cd /usr/src/igbinary-$IGBINARY_VER \
    && phpize \
    && ./configure --enable-igbinary \
    && make -j$(getconf _NPROCESSORS_ONLN) \
    && make install \
    && echo "extension=igbinary.so" > ${php_conf_d}igbinary.ini \
    && cd .. \
    && rm -rf /usr/src/igbinary-$IGBINARY_VER \
#
# Install pecl phpredis
    && cd /usr/src/redis-$REDIS_VER \
    && phpize \
    && ./configure --enable-redis --enable-redis-igbinary \
    && make -j$(getconf _NPROCESSORS_ONLN) \
    && make install \
    && echo "extension=redis.so" > ${php_conf_d}redis.ini \
    && cd .. \
    && rm -rf /usr/src/redis-$REDIS_VER \
#
# Install xdebug
    && cd /usr/src/xdebug-$XDEBUG_VER \
    && phpize \
    && ./configure --enable-xdebug \
    && make -j$(getconf _NPROCESSORS_ONLN) \
    && make install \
    && echo "zend_extension=xdebug.so" > ${php_conf_d}xdebug.ini \
    && echo "xdebug.remote_enable = 1" >> ${php_conf_d}xdebug.ini \
    && echo "xdebug.remote_connect_back = 1" >> ${php_conf_d}xdebug.ini \
    && echo "xdebug.idekey = \"PHPSTORM\"" >> ${php_conf_d}xdebug.ini \
    && cd .. \
    && rm -rf /usr/src/xdebug-$XDEBUG_VER \
#
# Install swoole
    && cd /usr/src/swoole-$SWOOLE_VER \
    && phpize \
    && ./configure --enable-sockets --enable-openssl \
        --enable-http2 --enable-swoole --enable-mysqlnd \
    && make -j$(getconf _NPROCESSORS_ONLN) \
    && make install \
    && echo "extension=swoole.so" > ${php_conf_d}swoole.ini \
    && cd .. \
    && rm -rf /usr/src/swoole-$SWOOLE_VER \
#
# Install mcrypt
    && cd /usr/src/mcrypt-$MCRYPT_VER \
    && phpize \
    && ./configure \
    && make -j$(getconf _NPROCESSORS_ONLN) \
    && make install \
    && echo "extension=mcrypt.so" > ${php_conf_d}mcrypt.ini \
    && cd .. \
    && rm -rf /usr/src/mcrypt-$MCRYPT_VER \
#
# Install mysql
    && cd /usr/src/pecl-database-mysql-$MYSQL_VER \
    && phpize \
    && ./configure \
    && make -j$(getconf _NPROCESSORS_ONLN) \
    && make install \
    && echo "extension=mysql.so" > ${php_conf_d}mysql.ini \
    && cd .. \
    && rm -rf /usr/src/pecl-database-mysql-$MYSQL_VER \
#
# Install pecl raphf
    && cd /usr/src/raphf-$RAPHF_VER \
    && phpize \
    && ./configure --enable-raphf \
    && make -j$(getconf _NPROCESSORS_ONLN) \
    && make install \
    && echo "extension=raphf.so" > ${php_conf_d}raphf.ini \
    && cd .. \
    && rm -rf /usr/src/raphf-$RAPHF_VER \
#
# Install pecl propro
    && cd /usr/src/propro-$PROPRO_VER \
    && phpize \
    && ./configure --enable-propro \
    && make -j$(getconf _NPROCESSORS_ONLN) \
    && make install \
    && echo "extension=propro.so" > ${php_conf_d}propro.ini \
    && cd .. \
    && rm -rf /usr/src/propro-$PROPRO_VER \
#
# Install pecl http; MUST BE last loaded
    && cd /usr/src/pecl_http-$HTTP_VER \
    && phpize \
    && ./configure --with-http-zlib-dir=/usr --with-http-libcurl-dir=/usr \
        --with-http-libevent-dir=/usr --with-http-libicu-dir=/usr --with-http-libidn2-dir=/usr \
        --with-http-libidn-dir=/usr --with-http-libidnkit2-dir=/usr --with-http-libidnkit-dir=/usr \
    && make -j$(getconf _NPROCESSORS_ONLN) \
    && make install \
    && echo "extension=http.so" > ${php_conf_d}z_http.ini \
    && cd .. \
    && rm -rf /usr/src/pecl_http-$HTTP_VER \
# composer
    && curl -fSL https://mirrors.aliyun.com/composer/composer.phar -o /usr/src/composer.phar \
    && php /usr/src/composer.phar config -g repo.packagist composer https://mirrors.aliyun.com/composer/ \
#
# clean apk build deps
    && apk del .build-deps

# Override stop signal to stop process gracefully
# https://github.com/php/php-src/blob/17baa87faddc2550def3ae7314236826bc1b1398/sapi/fpm/php-fpm.8.in#L163
STOPSIGNAL SIGQUIT

EXPOSE 9000

CMD ["php-fpm"]
